{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":26737,"sourceType":"datasetVersion","datasetId":20710}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport re\n\nfrom sklearn import linear_model\nfrom sklearn.model_selection import train_test_split\n\nimport warnings\nwarnings.filterwarnings('ignore')","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-19T18:55:05.021346Z","iopub.execute_input":"2024-06-19T18:55:05.021738Z","iopub.status.idle":"2024-06-19T18:55:05.029795Z","shell.execute_reply.started":"2024-06-19T18:55:05.021708Z","shell.execute_reply":"2024-06-19T18:55:05.028362Z"},"trusted":true},"execution_count":102,"outputs":[]},{"cell_type":"code","source":"df = pd.read_csv(\"/kaggle/input/bengaluru-house-price-data/Bengaluru_House_Data.csv\")\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-19T18:55:05.106722Z","iopub.execute_input":"2024-06-19T18:55:05.107146Z","iopub.status.idle":"2024-06-19T18:55:05.151770Z","shell.execute_reply.started":"2024-06-19T18:55:05.107112Z","shell.execute_reply":"2024-06-19T18:55:05.150395Z"},"trusted":true},"execution_count":103,"outputs":[{"execution_count":103,"output_type":"execute_result","data":{"text/plain":"              area_type   availability                  location       size  \\\n0  Super built-up  Area         19-Dec  Electronic City Phase II      2 BHK   \n1            Plot  Area  Ready To Move          Chikka Tirupathi  4 Bedroom   \n2        Built-up  Area  Ready To Move               Uttarahalli      3 BHK   \n3  Super built-up  Area  Ready To Move        Lingadheeranahalli      3 BHK   \n4  Super built-up  Area  Ready To Move                  Kothanur      2 BHK   \n\n   society total_sqft  bath  balcony   price  \n0  Coomee        1056   2.0      1.0   39.07  \n1  Theanmp       2600   5.0      3.0  120.00  \n2      NaN       1440   2.0      3.0   62.00  \n3  Soiewre       1521   3.0      1.0   95.00  \n4      NaN       1200   2.0      1.0   51.00  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>area_type</th>\n      <th>availability</th>\n      <th>location</th>\n      <th>size</th>\n      <th>society</th>\n      <th>total_sqft</th>\n      <th>bath</th>\n      <th>balcony</th>\n      <th>price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Super built-up  Area</td>\n      <td>19-Dec</td>\n      <td>Electronic City Phase II</td>\n      <td>2 BHK</td>\n      <td>Coomee</td>\n      <td>1056</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>39.07</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Plot  Area</td>\n      <td>Ready To Move</td>\n      <td>Chikka Tirupathi</td>\n      <td>4 Bedroom</td>\n      <td>Theanmp</td>\n      <td>2600</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>120.00</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Built-up  Area</td>\n      <td>Ready To Move</td>\n      <td>Uttarahalli</td>\n      <td>3 BHK</td>\n      <td>NaN</td>\n      <td>1440</td>\n      <td>2.0</td>\n      <td>3.0</td>\n      <td>62.00</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Super built-up  Area</td>\n      <td>Ready To Move</td>\n      <td>Lingadheeranahalli</td>\n      <td>3 BHK</td>\n      <td>Soiewre</td>\n      <td>1521</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>95.00</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Super built-up  Area</td>\n      <td>Ready To Move</td>\n      <td>Kothanur</td>\n      <td>2 BHK</td>\n      <td>NaN</td>\n      <td>1200</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>51.00</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-19T18:55:05.177176Z","iopub.execute_input":"2024-06-19T18:55:05.177590Z","iopub.status.idle":"2024-06-19T18:55:05.185987Z","shell.execute_reply.started":"2024-06-19T18:55:05.177557Z","shell.execute_reply":"2024-06-19T18:55:05.184703Z"},"trusted":true},"execution_count":104,"outputs":[{"execution_count":104,"output_type":"execute_result","data":{"text/plain":"(13320, 9)"},"metadata":{}}]},{"cell_type":"markdown","source":"## Data Preprocessing ","metadata":{}},{"cell_type":"markdown","source":"Lets start by Data Cleaning. We will remove features to simplify the model","metadata":{}},{"cell_type":"code","source":"grouped_df = df.groupby(['area_type'])['price'].agg(min_price='min', max_price='max').reset_index()\n\nprint(grouped_df)","metadata":{"execution":{"iopub.status.busy":"2024-06-19T18:55:05.250148Z","iopub.execute_input":"2024-06-19T18:55:05.250566Z","iopub.status.idle":"2024-06-19T18:55:05.262915Z","shell.execute_reply.started":"2024-06-19T18:55:05.250532Z","shell.execute_reply":"2024-06-19T18:55:05.261724Z"},"trusted":true},"execution_count":105,"outputs":[{"name":"stdout","text":"              area_type  min_price  max_price\n0        Built-up  Area       9.00     2050.0\n1          Carpet  Area      13.00      500.0\n2            Plot  Area       8.44     3600.0\n3  Super built-up  Area       8.00     2912.0\n","output_type":"stream"}]},{"cell_type":"markdown","source":" Since the min and max range is quite far we can drop the area_type column","metadata":{}},{"cell_type":"code","source":"df.drop(['area_type'], axis=1, inplace=True)\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-19T18:55:05.335761Z","iopub.execute_input":"2024-06-19T18:55:05.336168Z","iopub.status.idle":"2024-06-19T18:55:05.354369Z","shell.execute_reply.started":"2024-06-19T18:55:05.336134Z","shell.execute_reply":"2024-06-19T18:55:05.353120Z"},"trusted":true},"execution_count":106,"outputs":[{"execution_count":106,"output_type":"execute_result","data":{"text/plain":"    availability                  location       size  society total_sqft  \\\n0         19-Dec  Electronic City Phase II      2 BHK  Coomee        1056   \n1  Ready To Move          Chikka Tirupathi  4 Bedroom  Theanmp       2600   \n2  Ready To Move               Uttarahalli      3 BHK      NaN       1440   \n3  Ready To Move        Lingadheeranahalli      3 BHK  Soiewre       1521   \n4  Ready To Move                  Kothanur      2 BHK      NaN       1200   \n\n   bath  balcony   price  \n0   2.0      1.0   39.07  \n1   5.0      3.0  120.00  \n2   2.0      3.0   62.00  \n3   3.0      1.0   95.00  \n4   2.0      1.0   51.00  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>availability</th>\n      <th>location</th>\n      <th>size</th>\n      <th>society</th>\n      <th>total_sqft</th>\n      <th>bath</th>\n      <th>balcony</th>\n      <th>price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>19-Dec</td>\n      <td>Electronic City Phase II</td>\n      <td>2 BHK</td>\n      <td>Coomee</td>\n      <td>1056</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>39.07</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Ready To Move</td>\n      <td>Chikka Tirupathi</td>\n      <td>4 Bedroom</td>\n      <td>Theanmp</td>\n      <td>2600</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>120.00</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Ready To Move</td>\n      <td>Uttarahalli</td>\n      <td>3 BHK</td>\n      <td>NaN</td>\n      <td>1440</td>\n      <td>2.0</td>\n      <td>3.0</td>\n      <td>62.00</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Ready To Move</td>\n      <td>Lingadheeranahalli</td>\n      <td>3 BHK</td>\n      <td>Soiewre</td>\n      <td>1521</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>95.00</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Ready To Move</td>\n      <td>Kothanur</td>\n      <td>2 BHK</td>\n      <td>NaN</td>\n      <td>1200</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>51.00</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Group by 'are_type' and calculate the list of prices and the mean price\npd.reset_option('display.max_columns')\npd.reset_option('display.max_rows')\ngrouped_df = df.groupby(['society','total_sqft'])['price'].agg(min_price='min', max_price='max', average_price='mean').reset_index()\n\nfiltered_grouped_df = grouped_df[(grouped_df['max_price'] - grouped_df['min_price']) > 10]\n\nprint(filtered_grouped_df)\n","metadata":{"execution":{"iopub.status.busy":"2024-06-19T18:55:05.420958Z","iopub.execute_input":"2024-06-19T18:55:05.421335Z","iopub.status.idle":"2024-06-19T18:55:05.446270Z","shell.execute_reply.started":"2024-06-19T18:55:05.421305Z","shell.execute_reply":"2024-06-19T18:55:05.445082Z"},"trusted":true},"execution_count":107,"outputs":[{"name":"stdout","text":"      society total_sqft  min_price  max_price  average_price\n57    AWharde       3198      200.0     250.00     225.000000\n99    Adeatlm       2180      170.0     240.00     196.666667\n100   Adeatlm       2275      175.0     187.00     181.800000\n106   Adeatlm       4000      578.0     600.00     589.000000\n107   Adeatlm       5400      700.0     750.00     725.000000\n...       ...        ...        ...        ...            ...\n5548  Vaniai        1045       58.0      76.77      70.513333\n5561  Vaodssh       3600      245.0     260.00     252.500000\n5572  Vapasrk       3035      220.0     271.00     245.500000\n5602  Veales        1250       72.0      85.00      78.500000\n5707  Wiowsri        950       40.0      57.00      47.333333\n\n[341 rows x 5 columns]\n","output_type":"stream"}]},{"cell_type":"markdown","source":"For the same society with same total_sqft the prices vary too much. Hence, we can drop society. Also, since we have location we can afford to get rid of society.","metadata":{}},{"cell_type":"code","source":"df.drop(['society'], axis=1, inplace=True)\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-19T18:55:05.498573Z","iopub.execute_input":"2024-06-19T18:55:05.498966Z","iopub.status.idle":"2024-06-19T18:55:05.516422Z","shell.execute_reply.started":"2024-06-19T18:55:05.498933Z","shell.execute_reply":"2024-06-19T18:55:05.514788Z"},"trusted":true},"execution_count":108,"outputs":[{"execution_count":108,"output_type":"execute_result","data":{"text/plain":"    availability                  location       size total_sqft  bath  \\\n0         19-Dec  Electronic City Phase II      2 BHK       1056   2.0   \n1  Ready To Move          Chikka Tirupathi  4 Bedroom       2600   5.0   \n2  Ready To Move               Uttarahalli      3 BHK       1440   2.0   \n3  Ready To Move        Lingadheeranahalli      3 BHK       1521   3.0   \n4  Ready To Move                  Kothanur      2 BHK       1200   2.0   \n\n   balcony   price  \n0      1.0   39.07  \n1      3.0  120.00  \n2      3.0   62.00  \n3      1.0   95.00  \n4      1.0   51.00  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>availability</th>\n      <th>location</th>\n      <th>size</th>\n      <th>total_sqft</th>\n      <th>bath</th>\n      <th>balcony</th>\n      <th>price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>19-Dec</td>\n      <td>Electronic City Phase II</td>\n      <td>2 BHK</td>\n      <td>1056</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>39.07</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Ready To Move</td>\n      <td>Chikka Tirupathi</td>\n      <td>4 Bedroom</td>\n      <td>2600</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>120.00</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Ready To Move</td>\n      <td>Uttarahalli</td>\n      <td>3 BHK</td>\n      <td>1440</td>\n      <td>2.0</td>\n      <td>3.0</td>\n      <td>62.00</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Ready To Move</td>\n      <td>Lingadheeranahalli</td>\n      <td>3 BHK</td>\n      <td>1521</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>95.00</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Ready To Move</td>\n      <td>Kothanur</td>\n      <td>2 BHK</td>\n      <td>1200</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>51.00</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Group by 'are_type' and calculate the list of prices and the mean price\ngrouped_df = df.groupby(['location','availability'])['price'].agg(prices=list).reset_index()\ngrouped_df['prices_len'] = grouped_df['prices'].apply(lambda x: len(x))\nfiltered_grouped_df = grouped_df[(grouped_df['availability'] ) != 'Ready To Move']\n# filtered_grouped_df = filtered_grouped_df[(filtered_grouped_df['prices_len'] ) > 1]\nprint(filtered_grouped_df)\n","metadata":{"execution":{"iopub.status.busy":"2024-06-19T18:55:05.591760Z","iopub.execute_input":"2024-06-19T18:55:05.592159Z","iopub.status.idle":"2024-06-19T18:55:05.666806Z","shell.execute_reply.started":"2024-06-19T18:55:05.592125Z","shell.execute_reply":"2024-06-19T18:55:05.665623Z"},"trusted":true},"execution_count":109,"outputs":[{"name":"stdout","text":"                     location availability              prices  prices_len\n3                 Bhoganhalli       19-Dec             [22.89]           1\n5         Devarachikkanahalli       18-May              [44.0]           1\n9                Rachenahalli       18-May              [19.8]           1\n10               Rachenahalli       20-Aug              [28.0]           1\n12                Thanisandra       18-Nov             [25.25]           1\n...                       ...          ...                 ...         ...\n2359             manyata park       18-Nov      [84.83, 61.99]           2\n2360        manyata tech park       18-Apr              [56.0]           1\n2361  mvj engineering college       18-Jul             [56.53]           1\n2372                 tc.palya       18-Apr  [62.0, 55.0, 78.0]           3\n2376               whitefiled       20-Dec             [32.73]           1\n\n[1174 rows x 4 columns]\n","output_type":"stream"}]},{"cell_type":"markdown","source":"availablity has effect on the final price hence we will keep it","metadata":{}},{"cell_type":"markdown","source":"### Handling Missing Data","metadata":{}},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-19T18:55:05.688649Z","iopub.execute_input":"2024-06-19T18:55:05.689040Z","iopub.status.idle":"2024-06-19T18:55:05.703830Z","shell.execute_reply.started":"2024-06-19T18:55:05.689010Z","shell.execute_reply":"2024-06-19T18:55:05.702415Z"},"trusted":true},"execution_count":110,"outputs":[{"execution_count":110,"output_type":"execute_result","data":{"text/plain":"availability      0\nlocation          1\nsize             16\ntotal_sqft        0\nbath             73\nbalcony         609\nprice             0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df = df.dropna()","metadata":{"execution":{"iopub.status.busy":"2024-06-19T18:55:05.789752Z","iopub.execute_input":"2024-06-19T18:55:05.790153Z","iopub.status.idle":"2024-06-19T18:55:05.801398Z","shell.execute_reply.started":"2024-06-19T18:55:05.790120Z","shell.execute_reply":"2024-06-19T18:55:05.800236Z"},"trusted":true},"execution_count":111,"outputs":[]},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-19T18:55:05.952556Z","iopub.execute_input":"2024-06-19T18:55:05.952967Z","iopub.status.idle":"2024-06-19T18:55:05.966833Z","shell.execute_reply.started":"2024-06-19T18:55:05.952934Z","shell.execute_reply":"2024-06-19T18:55:05.965729Z"},"trusted":true},"execution_count":112,"outputs":[{"execution_count":112,"output_type":"execute_result","data":{"text/plain":"availability    0\nlocation        0\nsize            0\ntotal_sqft      0\nbath            0\nbalcony         0\nprice           0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"# rows_with_na = df[df['size'].isna()]\n# rows_with_na['indexes'] = df[df['size'].isna()].index\n# merged_df = pd.merge(rows_with_na, df, on=['location', 'total_sqft'], suffixes=('_left', '_right'))\n\n# # Fill NaN values in 'size' column with either 'size_left' or 'size_right'\n# merged_df['size'] = merged_df['size_left'].fillna(merged_df['size_right'])\n# merged_df['bath'] = merged_df['bath_left'].fillna(merged_df['bath_right'])\n# merged_df['balcony'] = merged_df['balcony_left'].fillna(merged_df['balcony_right'])\n\n# # Drop unnecessary columns\n# suffixes_to_drop = ['_left', '_right']\n# merged_df = merged_df.drop([col + suffix for col in ['size', 'bath', 'balcony','availability','price'] for suffix in suffixes_to_drop], axis=1)\n# print(merged_df)\n\n# # Display the merged DataFrame with filled NaN values\n# for index, i in merged_df.iterrows():\n#     print(i)\n#     print(df[(df['location']==i.location)  & ( (df['total_sqft'] > i.total_sqft-100) & (df['total_sqft'] < i.total_sqft+100))])\n# # df[(df['location']=='IVC Road')  & ( (df['total_sqft'] > 3800) & (df['total_sqft'] < 3900))]\n# df.loc[merged_df.indexes.tolist(), ['size', 'bath', 'balcony']] = merged_df[['size', 'bath', 'balcony']].values\n\n# df.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-19T18:55:06.026019Z","iopub.execute_input":"2024-06-19T18:55:06.026722Z","iopub.status.idle":"2024-06-19T18:55:06.031701Z","shell.execute_reply.started":"2024-06-19T18:55:06.026686Z","shell.execute_reply":"2024-06-19T18:55:06.030580Z"},"trusted":true},"execution_count":113,"outputs":[]},{"cell_type":"markdown","source":"### Data Transformation\n\nSince the total_sqft column has str values we need to transform them into floating point numbers","metadata":{}},{"cell_type":"code","source":"def convert_sqft_to_num(x):\n    if pd.isna(x):\n        return np.nan\n    if '-' in x:\n        parts = x.split('-')\n        return (float(parts[0]) + float(parts[1])) / 2\n    try:\n        return float(x)\n    except ValueError:\n        y = re.match(r'\\d+', x)\n        y = float(y.group())\n        if 'Sq. Meter' in x:\n            return y * 10.7639\n        if 'Acres' in x:\n            return y * 43560\n        if 'Sq. Yards' in x:\n            return y * 9\n        if 'Guntha' in x:\n            return y * 1089\n        if 'Cents' in x:\n            return y * 435.6\n        if 'Grounds' in x:\n            return y * 2400\n        if 'Perch' in x:\n            return y * 272.25\n        return np.nan\n\n# Apply the function to the total_sqft column\ndf['total_sqft'] = df['total_sqft'].apply(convert_sqft_to_num)\n\n# Display the DataFrame\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-19T18:55:06.053253Z","iopub.execute_input":"2024-06-19T18:55:06.054022Z","iopub.status.idle":"2024-06-19T18:55:06.086852Z","shell.execute_reply.started":"2024-06-19T18:55:06.053984Z","shell.execute_reply":"2024-06-19T18:55:06.085499Z"},"trusted":true},"execution_count":114,"outputs":[{"execution_count":114,"output_type":"execute_result","data":{"text/plain":"    availability                  location       size  total_sqft  bath  \\\n0         19-Dec  Electronic City Phase II      2 BHK      1056.0   2.0   \n1  Ready To Move          Chikka Tirupathi  4 Bedroom      2600.0   5.0   \n2  Ready To Move               Uttarahalli      3 BHK      1440.0   2.0   \n3  Ready To Move        Lingadheeranahalli      3 BHK      1521.0   3.0   \n4  Ready To Move                  Kothanur      2 BHK      1200.0   2.0   \n\n   balcony   price  \n0      1.0   39.07  \n1      3.0  120.00  \n2      3.0   62.00  \n3      1.0   95.00  \n4      1.0   51.00  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>availability</th>\n      <th>location</th>\n      <th>size</th>\n      <th>total_sqft</th>\n      <th>bath</th>\n      <th>balcony</th>\n      <th>price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>19-Dec</td>\n      <td>Electronic City Phase II</td>\n      <td>2 BHK</td>\n      <td>1056.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>39.07</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Ready To Move</td>\n      <td>Chikka Tirupathi</td>\n      <td>4 Bedroom</td>\n      <td>2600.0</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>120.00</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Ready To Move</td>\n      <td>Uttarahalli</td>\n      <td>3 BHK</td>\n      <td>1440.0</td>\n      <td>2.0</td>\n      <td>3.0</td>\n      <td>62.00</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Ready To Move</td>\n      <td>Lingadheeranahalli</td>\n      <td>3 BHK</td>\n      <td>1521.0</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>95.00</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Ready To Move</td>\n      <td>Kothanur</td>\n      <td>2 BHK</td>\n      <td>1200.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>51.00</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"### Handling Categorical Data\n\nWe need to change the size from categorical to numerical ","metadata":{}},{"cell_type":"code","source":"df['size'].unique()","metadata":{"execution":{"iopub.status.busy":"2024-06-19T18:55:06.088801Z","iopub.execute_input":"2024-06-19T18:55:06.089253Z","iopub.status.idle":"2024-06-19T18:55:06.098103Z","shell.execute_reply.started":"2024-06-19T18:55:06.089210Z","shell.execute_reply":"2024-06-19T18:55:06.096934Z"},"trusted":true},"execution_count":115,"outputs":[{"execution_count":115,"output_type":"execute_result","data":{"text/plain":"array(['2 BHK', '4 Bedroom', '3 BHK', '3 Bedroom', '1 BHK', '1 RK',\n       '4 BHK', '1 Bedroom', '2 Bedroom', '6 Bedroom', '8 Bedroom',\n       '7 Bedroom', '5 BHK', '7 BHK', '6 BHK', '5 Bedroom', '11 BHK',\n       '9 BHK', '9 Bedroom', '27 BHK', '11 Bedroom', '43 Bedroom',\n       '14 BHK', '8 BHK', '12 Bedroom', '10 Bedroom', '13 BHK'],\n      dtype=object)"},"metadata":{}}]},{"cell_type":"code","source":"df['bhk'] = df['size'].apply(lambda x: int(x.split(' ')[0]))\ndf.drop(['size'], axis=1, inplace=True)\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-19T18:55:06.100029Z","iopub.execute_input":"2024-06-19T18:55:06.100421Z","iopub.status.idle":"2024-06-19T18:55:06.131900Z","shell.execute_reply.started":"2024-06-19T18:55:06.100388Z","shell.execute_reply":"2024-06-19T18:55:06.130454Z"},"trusted":true},"execution_count":116,"outputs":[{"execution_count":116,"output_type":"execute_result","data":{"text/plain":"    availability                  location  total_sqft  bath  balcony   price  \\\n0         19-Dec  Electronic City Phase II      1056.0   2.0      1.0   39.07   \n1  Ready To Move          Chikka Tirupathi      2600.0   5.0      3.0  120.00   \n2  Ready To Move               Uttarahalli      1440.0   2.0      3.0   62.00   \n3  Ready To Move        Lingadheeranahalli      1521.0   3.0      1.0   95.00   \n4  Ready To Move                  Kothanur      1200.0   2.0      1.0   51.00   \n\n   bhk  \n0    2  \n1    4  \n2    3  \n3    3  \n4    2  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>availability</th>\n      <th>location</th>\n      <th>total_sqft</th>\n      <th>bath</th>\n      <th>balcony</th>\n      <th>price</th>\n      <th>bhk</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>19-Dec</td>\n      <td>Electronic City Phase II</td>\n      <td>1056.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>39.07</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Ready To Move</td>\n      <td>Chikka Tirupathi</td>\n      <td>2600.0</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>120.00</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Ready To Move</td>\n      <td>Uttarahalli</td>\n      <td>1440.0</td>\n      <td>2.0</td>\n      <td>3.0</td>\n      <td>62.00</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Ready To Move</td>\n      <td>Lingadheeranahalli</td>\n      <td>1521.0</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>95.00</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Ready To Move</td>\n      <td>Kothanur</td>\n      <td>1200.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>51.00</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-19T18:55:06.134540Z","iopub.execute_input":"2024-06-19T18:55:06.134941Z","iopub.status.idle":"2024-06-19T18:55:06.144862Z","shell.execute_reply.started":"2024-06-19T18:55:06.134901Z","shell.execute_reply":"2024-06-19T18:55:06.143651Z"},"trusted":true},"execution_count":117,"outputs":[{"execution_count":117,"output_type":"execute_result","data":{"text/plain":"availability    0\nlocation        0\ntotal_sqft      0\nbath            0\nbalcony         0\nprice           0\nbhk             0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"### Feature Engineering \n\nDimentionality Reduction - Since there are a lot of diff locations lets group some of them ","metadata":{}},{"cell_type":"code","source":"print('Unique Locations Before changing case = ', len(df['location'].unique()))\ndf['location'] = df['location'].str.lower()\nprint('Unique Locations After changing case = ', len(df['location'].unique()))\ndf_location_stats = df.groupby(['location'])['location'].agg('count')\ndf_location_stats.sort_values(ascending=False)","metadata":{"execution":{"iopub.status.busy":"2024-06-19T18:55:06.147202Z","iopub.execute_input":"2024-06-19T18:55:06.147673Z","iopub.status.idle":"2024-06-19T18:55:06.172803Z","shell.execute_reply.started":"2024-06-19T18:55:06.147630Z","shell.execute_reply":"2024-06-19T18:55:06.171687Z"},"trusted":true},"execution_count":118,"outputs":[{"name":"stdout","text":"Unique Locations Before changing case =  1265\nUnique Locations After changing case =  1256\n","output_type":"stream"},{"execution_count":118,"output_type":"execute_result","data":{"text/plain":"location\nwhitefield         514\nsarjapur  road     372\nelectronic city    300\nkanakpura road     261\nthanisandra        231\n                  ... \njunnasandra          1\nk r c kothanur       1\nkadarenahalli        1\nkadubisnahalli       1\nzuzuvadi             1\nName: location, Length: 1256, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df_locations_less_than_10 = df_location_stats[df_location_stats<=10]\nprint('Locations to be grouped = ',len(df_locations_less_than_10))\n\ndf['location']=df['location'].apply(lambda x: 'other' if x in df_locations_less_than_10 else x)\nprint('Unique Locations finally =', len(df['location'].unique()))","metadata":{"execution":{"iopub.status.busy":"2024-06-19T18:55:06.174078Z","iopub.execute_input":"2024-06-19T18:55:06.174486Z","iopub.status.idle":"2024-06-19T18:55:06.214602Z","shell.execute_reply.started":"2024-06-19T18:55:06.174409Z","shell.execute_reply":"2024-06-19T18:55:06.213195Z"},"trusted":true},"execution_count":119,"outputs":[{"name":"stdout","text":"Locations to be grouped =  1019\nUnique Locations finally = 238\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Lets make a new column for price per sqft","metadata":{}},{"cell_type":"code","source":"df['price_per_sqft']=df['price']*100000/df['total_sqft']\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-19T18:55:06.216907Z","iopub.execute_input":"2024-06-19T18:55:06.217270Z","iopub.status.idle":"2024-06-19T18:55:06.235319Z","shell.execute_reply.started":"2024-06-19T18:55:06.217228Z","shell.execute_reply":"2024-06-19T18:55:06.234221Z"},"trusted":true},"execution_count":120,"outputs":[{"execution_count":120,"output_type":"execute_result","data":{"text/plain":"    availability                  location  total_sqft  bath  balcony   price  \\\n0         19-Dec  electronic city phase ii      1056.0   2.0      1.0   39.07   \n1  Ready To Move          chikka tirupathi      2600.0   5.0      3.0  120.00   \n2  Ready To Move               uttarahalli      1440.0   2.0      3.0   62.00   \n3  Ready To Move        lingadheeranahalli      1521.0   3.0      1.0   95.00   \n4  Ready To Move                  kothanur      1200.0   2.0      1.0   51.00   \n\n   bhk  price_per_sqft  \n0    2     3699.810606  \n1    4     4615.384615  \n2    3     4305.555556  \n3    3     6245.890861  \n4    2     4250.000000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>availability</th>\n      <th>location</th>\n      <th>total_sqft</th>\n      <th>bath</th>\n      <th>balcony</th>\n      <th>price</th>\n      <th>bhk</th>\n      <th>price_per_sqft</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>19-Dec</td>\n      <td>electronic city phase ii</td>\n      <td>1056.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>39.07</td>\n      <td>2</td>\n      <td>3699.810606</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Ready To Move</td>\n      <td>chikka tirupathi</td>\n      <td>2600.0</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>120.00</td>\n      <td>4</td>\n      <td>4615.384615</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Ready To Move</td>\n      <td>uttarahalli</td>\n      <td>1440.0</td>\n      <td>2.0</td>\n      <td>3.0</td>\n      <td>62.00</td>\n      <td>3</td>\n      <td>4305.555556</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Ready To Move</td>\n      <td>lingadheeranahalli</td>\n      <td>1521.0</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>95.00</td>\n      <td>3</td>\n      <td>6245.890861</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Ready To Move</td>\n      <td>kothanur</td>\n      <td>1200.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>51.00</td>\n      <td>2</td>\n      <td>4250.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"### Outlier Removal\n\nWe can assume that a bedroom is of 200sqft at the very least, so we should remove those entries where the room sizes are too small","metadata":{}},{"cell_type":"code","source":"print('Total rows =',df.shape)\nprint('Outliers to be removed =',df[df['total_sqft']/df['bhk']<200].shape)\n\ndf = df[~(df['total_sqft']/df['bhk']<200)]\nprint('Total rows =',df.shape)","metadata":{"execution":{"iopub.status.busy":"2024-06-19T18:55:06.236839Z","iopub.execute_input":"2024-06-19T18:55:06.237175Z","iopub.status.idle":"2024-06-19T18:55:06.253737Z","shell.execute_reply.started":"2024-06-19T18:55:06.237145Z","shell.execute_reply":"2024-06-19T18:55:06.252478Z"},"trusted":true},"execution_count":121,"outputs":[{"name":"stdout","text":"Total rows = (12710, 8)\nOutliers to be removed = (284, 8)\nTotal rows = (12426, 8)\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}