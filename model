{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f51af40a",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:30.356646Z",
     "iopub.status.busy": "2024-06-19T19:02:30.356268Z",
     "iopub.status.idle": "2024-06-19T19:02:32.641538Z",
     "shell.execute_reply": "2024-06-19T19:02:32.640364Z"
    },
    "papermill": {
     "duration": 2.296357,
     "end_time": "2024-06-19T19:02:32.644175",
     "exception": false,
     "start_time": "2024-06-19T19:02:30.347818",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np \n",
    "import pandas as pd \n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "\n",
    "import re\n",
    "\n",
    "from sklearn import linear_model\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "9bf15641",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:32.660118Z",
     "iopub.status.busy": "2024-06-19T19:02:32.659083Z",
     "iopub.status.idle": "2024-06-19T19:02:32.727334Z",
     "shell.execute_reply": "2024-06-19T19:02:32.726381Z"
    },
    "papermill": {
     "duration": 0.07825,
     "end_time": "2024-06-19T19:02:32.729433",
     "exception": false,
     "start_time": "2024-06-19T19:02:32.651183",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>area_type</th>\n",
       "      <th>availability</th>\n",
       "      <th>location</th>\n",
       "      <th>size</th>\n",
       "      <th>society</th>\n",
       "      <th>total_sqft</th>\n",
       "      <th>bath</th>\n",
       "      <th>balcony</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Super built-up  Area</td>\n",
       "      <td>19-Dec</td>\n",
       "      <td>Electronic City Phase II</td>\n",
       "      <td>2 BHK</td>\n",
       "      <td>Coomee</td>\n",
       "      <td>1056</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>39.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Plot  Area</td>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Chikka Tirupathi</td>\n",
       "      <td>4 Bedroom</td>\n",
       "      <td>Theanmp</td>\n",
       "      <td>2600</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>120.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Built-up  Area</td>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Uttarahalli</td>\n",
       "      <td>3 BHK</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1440</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>62.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Super built-up  Area</td>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Lingadheeranahalli</td>\n",
       "      <td>3 BHK</td>\n",
       "      <td>Soiewre</td>\n",
       "      <td>1521</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>95.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Super built-up  Area</td>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Kothanur</td>\n",
       "      <td>2 BHK</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1200</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>51.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              area_type   availability                  location       size  \\\n",
       "0  Super built-up  Area         19-Dec  Electronic City Phase II      2 BHK   \n",
       "1            Plot  Area  Ready To Move          Chikka Tirupathi  4 Bedroom   \n",
       "2        Built-up  Area  Ready To Move               Uttarahalli      3 BHK   \n",
       "3  Super built-up  Area  Ready To Move        Lingadheeranahalli      3 BHK   \n",
       "4  Super built-up  Area  Ready To Move                  Kothanur      2 BHK   \n",
       "\n",
       "   society total_sqft  bath  balcony   price  \n",
       "0  Coomee        1056   2.0      1.0   39.07  \n",
       "1  Theanmp       2600   5.0      3.0  120.00  \n",
       "2      NaN       1440   2.0      3.0   62.00  \n",
       "3  Soiewre       1521   3.0      1.0   95.00  \n",
       "4      NaN       1200   2.0      1.0   51.00  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv(\"/kaggle/input/bengaluru-house-price-data/Bengaluru_House_Data.csv\")\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6654a525",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:32.744431Z",
     "iopub.status.busy": "2024-06-19T19:02:32.744096Z",
     "iopub.status.idle": "2024-06-19T19:02:32.749795Z",
     "shell.execute_reply": "2024-06-19T19:02:32.748905Z"
    },
    "papermill": {
     "duration": 0.015482,
     "end_time": "2024-06-19T19:02:32.751853",
     "exception": false,
     "start_time": "2024-06-19T19:02:32.736371",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(13320, 9)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f8ba67ac",
   "metadata": {
    "papermill": {
     "duration": 0.006541,
     "end_time": "2024-06-19T19:02:32.765185",
     "exception": false,
     "start_time": "2024-06-19T19:02:32.758644",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data Preprocessing "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b52bace",
   "metadata": {
    "papermill": {
     "duration": 0.006511,
     "end_time": "2024-06-19T19:02:32.778427",
     "exception": false,
     "start_time": "2024-06-19T19:02:32.771916",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Lets start by Data Cleaning. We will remove features to simplify the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d1620378",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:32.793599Z",
     "iopub.status.busy": "2024-06-19T19:02:32.792927Z",
     "iopub.status.idle": "2024-06-19T19:02:32.811963Z",
     "shell.execute_reply": "2024-06-19T19:02:32.810752Z"
    },
    "papermill": {
     "duration": 0.028864,
     "end_time": "2024-06-19T19:02:32.813960",
     "exception": false,
     "start_time": "2024-06-19T19:02:32.785096",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              area_type  min_price  max_price\n",
      "0        Built-up  Area       9.00     2050.0\n",
      "1          Carpet  Area      13.00      500.0\n",
      "2            Plot  Area       8.44     3600.0\n",
      "3  Super built-up  Area       8.00     2912.0\n"
     ]
    }
   ],
   "source": [
    "grouped_df = df.groupby(['area_type'])['price'].agg(min_price='min', max_price='max').reset_index()\n",
    "\n",
    "print(grouped_df)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "63434d22",
   "metadata": {
    "papermill": {
     "duration": 0.006812,
     "end_time": "2024-06-19T19:02:32.827692",
     "exception": false,
     "start_time": "2024-06-19T19:02:32.820880",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    " Since the min and max range is quite far we can drop the area_type column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "cb5a3224",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:32.842972Z",
     "iopub.status.busy": "2024-06-19T19:02:32.842378Z",
     "iopub.status.idle": "2024-06-19T19:02:32.858714Z",
     "shell.execute_reply": "2024-06-19T19:02:32.857806Z"
    },
    "papermill": {
     "duration": 0.026204,
     "end_time": "2024-06-19T19:02:32.860700",
     "exception": false,
     "start_time": "2024-06-19T19:02:32.834496",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>availability</th>\n",
       "      <th>location</th>\n",
       "      <th>size</th>\n",
       "      <th>society</th>\n",
       "      <th>total_sqft</th>\n",
       "      <th>bath</th>\n",
       "      <th>balcony</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19-Dec</td>\n",
       "      <td>Electronic City Phase II</td>\n",
       "      <td>2 BHK</td>\n",
       "      <td>Coomee</td>\n",
       "      <td>1056</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>39.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Chikka Tirupathi</td>\n",
       "      <td>4 Bedroom</td>\n",
       "      <td>Theanmp</td>\n",
       "      <td>2600</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>120.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Uttarahalli</td>\n",
       "      <td>3 BHK</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1440</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>62.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Lingadheeranahalli</td>\n",
       "      <td>3 BHK</td>\n",
       "      <td>Soiewre</td>\n",
       "      <td>1521</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>95.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Kothanur</td>\n",
       "      <td>2 BHK</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1200</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>51.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    availability                  location       size  society total_sqft  \\\n",
       "0         19-Dec  Electronic City Phase II      2 BHK  Coomee        1056   \n",
       "1  Ready To Move          Chikka Tirupathi  4 Bedroom  Theanmp       2600   \n",
       "2  Ready To Move               Uttarahalli      3 BHK      NaN       1440   \n",
       "3  Ready To Move        Lingadheeranahalli      3 BHK  Soiewre       1521   \n",
       "4  Ready To Move                  Kothanur      2 BHK      NaN       1200   \n",
       "\n",
       "   bath  balcony   price  \n",
       "0   2.0      1.0   39.07  \n",
       "1   5.0      3.0  120.00  \n",
       "2   2.0      3.0   62.00  \n",
       "3   3.0      1.0   95.00  \n",
       "4   2.0      1.0   51.00  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.drop(['area_type'], axis=1, inplace=True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2465c028",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:32.876405Z",
     "iopub.status.busy": "2024-06-19T19:02:32.875741Z",
     "iopub.status.idle": "2024-06-19T19:02:32.899891Z",
     "shell.execute_reply": "2024-06-19T19:02:32.898893Z"
    },
    "papermill": {
     "duration": 0.034073,
     "end_time": "2024-06-19T19:02:32.901869",
     "exception": false,
     "start_time": "2024-06-19T19:02:32.867796",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      society total_sqft  min_price  max_price  average_price\n",
      "57    AWharde       3198      200.0     250.00     225.000000\n",
      "99    Adeatlm       2180      170.0     240.00     196.666667\n",
      "100   Adeatlm       2275      175.0     187.00     181.800000\n",
      "106   Adeatlm       4000      578.0     600.00     589.000000\n",
      "107   Adeatlm       5400      700.0     750.00     725.000000\n",
      "...       ...        ...        ...        ...            ...\n",
      "5548  Vaniai        1045       58.0      76.77      70.513333\n",
      "5561  Vaodssh       3600      245.0     260.00     252.500000\n",
      "5572  Vapasrk       3035      220.0     271.00     245.500000\n",
      "5602  Veales        1250       72.0      85.00      78.500000\n",
      "5707  Wiowsri        950       40.0      57.00      47.333333\n",
      "\n",
      "[341 rows x 5 columns]\n"
     ]
    }
   ],
   "source": [
    "# Group by 'are_type' and calculate the list of prices and the mean price\n",
    "pd.reset_option('display.max_columns')\n",
    "pd.reset_option('display.max_rows')\n",
    "grouped_df = df.groupby(['society','total_sqft'])['price'].agg(min_price='min', max_price='max', average_price='mean').reset_index()\n",
    "\n",
    "filtered_grouped_df = grouped_df[(grouped_df['max_price'] - grouped_df['min_price']) > 10]\n",
    "\n",
    "print(filtered_grouped_df)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f695e20c",
   "metadata": {
    "papermill": {
     "duration": 0.006887,
     "end_time": "2024-06-19T19:02:32.916116",
     "exception": false,
     "start_time": "2024-06-19T19:02:32.909229",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "For the same society with same total_sqft the prices vary too much. Hence, we can drop society. Also, since we have location we can afford to get rid of society."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8148759b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:32.932643Z",
     "iopub.status.busy": "2024-06-19T19:02:32.931935Z",
     "iopub.status.idle": "2024-06-19T19:02:32.946487Z",
     "shell.execute_reply": "2024-06-19T19:02:32.945489Z"
    },
    "papermill": {
     "duration": 0.025722,
     "end_time": "2024-06-19T19:02:32.948956",
     "exception": false,
     "start_time": "2024-06-19T19:02:32.923234",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>availability</th>\n",
       "      <th>location</th>\n",
       "      <th>size</th>\n",
       "      <th>total_sqft</th>\n",
       "      <th>bath</th>\n",
       "      <th>balcony</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19-Dec</td>\n",
       "      <td>Electronic City Phase II</td>\n",
       "      <td>2 BHK</td>\n",
       "      <td>1056</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>39.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Chikka Tirupathi</td>\n",
       "      <td>4 Bedroom</td>\n",
       "      <td>2600</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>120.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Uttarahalli</td>\n",
       "      <td>3 BHK</td>\n",
       "      <td>1440</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>62.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Lingadheeranahalli</td>\n",
       "      <td>3 BHK</td>\n",
       "      <td>1521</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>95.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Kothanur</td>\n",
       "      <td>2 BHK</td>\n",
       "      <td>1200</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>51.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    availability                  location       size total_sqft  bath  \\\n",
       "0         19-Dec  Electronic City Phase II      2 BHK       1056   2.0   \n",
       "1  Ready To Move          Chikka Tirupathi  4 Bedroom       2600   5.0   \n",
       "2  Ready To Move               Uttarahalli      3 BHK       1440   2.0   \n",
       "3  Ready To Move        Lingadheeranahalli      3 BHK       1521   3.0   \n",
       "4  Ready To Move                  Kothanur      2 BHK       1200   2.0   \n",
       "\n",
       "   balcony   price  \n",
       "0      1.0   39.07  \n",
       "1      3.0  120.00  \n",
       "2      3.0   62.00  \n",
       "3      1.0   95.00  \n",
       "4      1.0   51.00  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.drop(['society'], axis=1, inplace=True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "92e1aa5c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:32.965876Z",
     "iopub.status.busy": "2024-06-19T19:02:32.965046Z",
     "iopub.status.idle": "2024-06-19T19:02:33.039664Z",
     "shell.execute_reply": "2024-06-19T19:02:33.038689Z"
    },
    "papermill": {
     "duration": 0.085547,
     "end_time": "2024-06-19T19:02:33.041948",
     "exception": false,
     "start_time": "2024-06-19T19:02:32.956401",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                     location availability              prices  prices_len\n",
      "3                 Bhoganhalli       19-Dec             [22.89]           1\n",
      "5         Devarachikkanahalli       18-May              [44.0]           1\n",
      "9                Rachenahalli       18-May              [19.8]           1\n",
      "10               Rachenahalli       20-Aug              [28.0]           1\n",
      "12                Thanisandra       18-Nov             [25.25]           1\n",
      "...                       ...          ...                 ...         ...\n",
      "2359             manyata park       18-Nov      [84.83, 61.99]           2\n",
      "2360        manyata tech park       18-Apr              [56.0]           1\n",
      "2361  mvj engineering college       18-Jul             [56.53]           1\n",
      "2372                 tc.palya       18-Apr  [62.0, 55.0, 78.0]           3\n",
      "2376               whitefiled       20-Dec             [32.73]           1\n",
      "\n",
      "[1174 rows x 4 columns]\n"
     ]
    }
   ],
   "source": [
    "# Group by 'are_type' and calculate the list of prices and the mean price\n",
    "grouped_df = df.groupby(['location','availability'])['price'].agg(prices=list).reset_index()\n",
    "grouped_df['prices_len'] = grouped_df['prices'].apply(lambda x: len(x))\n",
    "filtered_grouped_df = grouped_df[(grouped_df['availability'] ) != 'Ready To Move']\n",
    "# filtered_grouped_df = filtered_grouped_df[(filtered_grouped_df['prices_len'] ) > 1]\n",
    "print(filtered_grouped_df)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "27f9ed97",
   "metadata": {
    "papermill": {
     "duration": 0.007261,
     "end_time": "2024-06-19T19:02:33.056982",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.049721",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "availablity has effect on the final price hence we will keep it"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a5163a5",
   "metadata": {
    "papermill": {
     "duration": 0.007235,
     "end_time": "2024-06-19T19:02:33.071561",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.064326",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Handling Missing Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "6ec928ff",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:33.088198Z",
     "iopub.status.busy": "2024-06-19T19:02:33.087362Z",
     "iopub.status.idle": "2024-06-19T19:02:33.097913Z",
     "shell.execute_reply": "2024-06-19T19:02:33.096954Z"
    },
    "papermill": {
     "duration": 0.021078,
     "end_time": "2024-06-19T19:02:33.100012",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.078934",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "availability      0\n",
       "location          1\n",
       "size             16\n",
       "total_sqft        0\n",
       "bath             73\n",
       "balcony         609\n",
       "price             0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "892193e8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:33.117053Z",
     "iopub.status.busy": "2024-06-19T19:02:33.116276Z",
     "iopub.status.idle": "2024-06-19T19:02:33.125053Z",
     "shell.execute_reply": "2024-06-19T19:02:33.124164Z"
    },
    "papermill": {
     "duration": 0.019231,
     "end_time": "2024-06-19T19:02:33.126946",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.107715",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = df.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "df85444d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:33.143663Z",
     "iopub.status.busy": "2024-06-19T19:02:33.142802Z",
     "iopub.status.idle": "2024-06-19T19:02:33.152703Z",
     "shell.execute_reply": "2024-06-19T19:02:33.151809Z"
    },
    "papermill": {
     "duration": 0.020296,
     "end_time": "2024-06-19T19:02:33.154670",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.134374",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "availability    0\n",
       "location        0\n",
       "size            0\n",
       "total_sqft      0\n",
       "bath            0\n",
       "balcony         0\n",
       "price           0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "59db5478",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:33.171355Z",
     "iopub.status.busy": "2024-06-19T19:02:33.170798Z",
     "iopub.status.idle": "2024-06-19T19:02:33.175447Z",
     "shell.execute_reply": "2024-06-19T19:02:33.174560Z"
    },
    "papermill": {
     "duration": 0.015071,
     "end_time": "2024-06-19T19:02:33.177417",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.162346",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# rows_with_na = df[df['size'].isna()]\n",
    "# rows_with_na['indexes'] = df[df['size'].isna()].index\n",
    "# merged_df = pd.merge(rows_with_na, df, on=['location', 'total_sqft'], suffixes=('_left', '_right'))\n",
    "\n",
    "# # Fill NaN values in 'size' column with either 'size_left' or 'size_right'\n",
    "# merged_df['size'] = merged_df['size_left'].fillna(merged_df['size_right'])\n",
    "# merged_df['bath'] = merged_df['bath_left'].fillna(merged_df['bath_right'])\n",
    "# merged_df['balcony'] = merged_df['balcony_left'].fillna(merged_df['balcony_right'])\n",
    "\n",
    "# # Drop unnecessary columns\n",
    "# suffixes_to_drop = ['_left', '_right']\n",
    "# merged_df = merged_df.drop([col + suffix for col in ['size', 'bath', 'balcony','availability','price'] for suffix in suffixes_to_drop], axis=1)\n",
    "# print(merged_df)\n",
    "\n",
    "# # Display the merged DataFrame with filled NaN values\n",
    "# for index, i in merged_df.iterrows():\n",
    "#     print(i)\n",
    "#     print(df[(df['location']==i.location)  & ( (df['total_sqft'] > i.total_sqft-100) & (df['total_sqft'] < i.total_sqft+100))])\n",
    "# # df[(df['location']=='IVC Road')  & ( (df['total_sqft'] > 3800) & (df['total_sqft'] < 3900))]\n",
    "# df.loc[merged_df.indexes.tolist(), ['size', 'bath', 'balcony']] = merged_df[['size', 'bath', 'balcony']].values\n",
    "\n",
    "# df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0c602788",
   "metadata": {
    "papermill": {
     "duration": 0.00729,
     "end_time": "2024-06-19T19:02:33.192379",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.185089",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Data Transformation\n",
    "\n",
    "Since the total_sqft column has str values we need to transform them into floating point numbers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "967149a0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:33.208896Z",
     "iopub.status.busy": "2024-06-19T19:02:33.208549Z",
     "iopub.status.idle": "2024-06-19T19:02:33.238361Z",
     "shell.execute_reply": "2024-06-19T19:02:33.237446Z"
    },
    "papermill": {
     "duration": 0.040369,
     "end_time": "2024-06-19T19:02:33.240244",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.199875",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>availability</th>\n",
       "      <th>location</th>\n",
       "      <th>size</th>\n",
       "      <th>total_sqft</th>\n",
       "      <th>bath</th>\n",
       "      <th>balcony</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19-Dec</td>\n",
       "      <td>Electronic City Phase II</td>\n",
       "      <td>2 BHK</td>\n",
       "      <td>1056.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>39.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Chikka Tirupathi</td>\n",
       "      <td>4 Bedroom</td>\n",
       "      <td>2600.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>120.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Uttarahalli</td>\n",
       "      <td>3 BHK</td>\n",
       "      <td>1440.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>62.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Lingadheeranahalli</td>\n",
       "      <td>3 BHK</td>\n",
       "      <td>1521.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>95.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Kothanur</td>\n",
       "      <td>2 BHK</td>\n",
       "      <td>1200.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>51.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    availability                  location       size  total_sqft  bath  \\\n",
       "0         19-Dec  Electronic City Phase II      2 BHK      1056.0   2.0   \n",
       "1  Ready To Move          Chikka Tirupathi  4 Bedroom      2600.0   5.0   \n",
       "2  Ready To Move               Uttarahalli      3 BHK      1440.0   2.0   \n",
       "3  Ready To Move        Lingadheeranahalli      3 BHK      1521.0   3.0   \n",
       "4  Ready To Move                  Kothanur      2 BHK      1200.0   2.0   \n",
       "\n",
       "   balcony   price  \n",
       "0      1.0   39.07  \n",
       "1      3.0  120.00  \n",
       "2      3.0   62.00  \n",
       "3      1.0   95.00  \n",
       "4      1.0   51.00  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def convert_sqft_to_num(x):\n",
    "    if pd.isna(x):\n",
    "        return np.nan\n",
    "    if '-' in x:\n",
    "        parts = x.split('-')\n",
    "        return (float(parts[0]) + float(parts[1])) / 2\n",
    "    try:\n",
    "        return float(x)\n",
    "    except ValueError:\n",
    "        y = re.match(r'\\d+', x)\n",
    "        y = float(y.group())\n",
    "        if 'Sq. Meter' in x:\n",
    "            return y * 10.7639\n",
    "        if 'Acres' in x:\n",
    "            return y * 43560\n",
    "        if 'Sq. Yards' in x:\n",
    "            return y * 9\n",
    "        if 'Guntha' in x:\n",
    "            return y * 1089\n",
    "        if 'Cents' in x:\n",
    "            return y * 435.6\n",
    "        if 'Grounds' in x:\n",
    "            return y * 2400\n",
    "        if 'Perch' in x:\n",
    "            return y * 272.25\n",
    "        return np.nan\n",
    "\n",
    "# Apply the function to the total_sqft column\n",
    "df['total_sqft'] = df['total_sqft'].apply(convert_sqft_to_num)\n",
    "\n",
    "# Display the DataFrame\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4bb3a9ac",
   "metadata": {
    "papermill": {
     "duration": 0.007638,
     "end_time": "2024-06-19T19:02:33.256017",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.248379",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Handling Categorical Data\n",
    "\n",
    "We need to change the size from categorical to numerical "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1e0450b3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:33.272986Z",
     "iopub.status.busy": "2024-06-19T19:02:33.272649Z",
     "iopub.status.idle": "2024-06-19T19:02:33.279920Z",
     "shell.execute_reply": "2024-06-19T19:02:33.278971Z"
    },
    "papermill": {
     "duration": 0.018024,
     "end_time": "2024-06-19T19:02:33.281876",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.263852",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['2 BHK', '4 Bedroom', '3 BHK', '3 Bedroom', '1 BHK', '1 RK',\n",
       "       '4 BHK', '1 Bedroom', '2 Bedroom', '6 Bedroom', '8 Bedroom',\n",
       "       '7 Bedroom', '5 BHK', '7 BHK', '6 BHK', '5 Bedroom', '11 BHK',\n",
       "       '9 BHK', '9 Bedroom', '27 BHK', '11 Bedroom', '43 Bedroom',\n",
       "       '14 BHK', '8 BHK', '12 Bedroom', '10 Bedroom', '13 BHK'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['size'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "59c91868",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:33.299282Z",
     "iopub.status.busy": "2024-06-19T19:02:33.298958Z",
     "iopub.status.idle": "2024-06-19T19:02:33.324061Z",
     "shell.execute_reply": "2024-06-19T19:02:33.323129Z"
    },
    "papermill": {
     "duration": 0.036206,
     "end_time": "2024-06-19T19:02:33.326136",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.289930",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>availability</th>\n",
       "      <th>location</th>\n",
       "      <th>total_sqft</th>\n",
       "      <th>bath</th>\n",
       "      <th>balcony</th>\n",
       "      <th>price</th>\n",
       "      <th>bhk</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19-Dec</td>\n",
       "      <td>Electronic City Phase II</td>\n",
       "      <td>1056.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>39.07</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Chikka Tirupathi</td>\n",
       "      <td>2600.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>120.00</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Uttarahalli</td>\n",
       "      <td>1440.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>62.00</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Lingadheeranahalli</td>\n",
       "      <td>1521.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>95.00</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Kothanur</td>\n",
       "      <td>1200.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>51.00</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    availability                  location  total_sqft  bath  balcony   price  \\\n",
       "0         19-Dec  Electronic City Phase II      1056.0   2.0      1.0   39.07   \n",
       "1  Ready To Move          Chikka Tirupathi      2600.0   5.0      3.0  120.00   \n",
       "2  Ready To Move               Uttarahalli      1440.0   2.0      3.0   62.00   \n",
       "3  Ready To Move        Lingadheeranahalli      1521.0   3.0      1.0   95.00   \n",
       "4  Ready To Move                  Kothanur      1200.0   2.0      1.0   51.00   \n",
       "\n",
       "   bhk  \n",
       "0    2  \n",
       "1    4  \n",
       "2    3  \n",
       "3    3  \n",
       "4    2  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['bhk'] = df['size'].apply(lambda x: int(x.split(' ')[0]))\n",
    "df.drop(['size'], axis=1, inplace=True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "e7f0bf77",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:33.344448Z",
     "iopub.status.busy": "2024-06-19T19:02:33.343772Z",
     "iopub.status.idle": "2024-06-19T19:02:33.353459Z",
     "shell.execute_reply": "2024-06-19T19:02:33.352566Z"
    },
    "papermill": {
     "duration": 0.020913,
     "end_time": "2024-06-19T19:02:33.355398",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.334485",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "availability    0\n",
       "location        0\n",
       "total_sqft      0\n",
       "bath            0\n",
       "balcony         0\n",
       "price           0\n",
       "bhk             0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b379fd2b",
   "metadata": {
    "papermill": {
     "duration": 0.007929,
     "end_time": "2024-06-19T19:02:33.371696",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.363767",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Feature Engineering \n",
    "\n",
    "Dimentionality Reduction - Since there are a lot of diff locations lets group some of them "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "3f0241db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:33.389801Z",
     "iopub.status.busy": "2024-06-19T19:02:33.389148Z",
     "iopub.status.idle": "2024-06-19T19:02:33.408289Z",
     "shell.execute_reply": "2024-06-19T19:02:33.407404Z"
    },
    "papermill": {
     "duration": 0.030467,
     "end_time": "2024-06-19T19:02:33.410313",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.379846",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Unique Locations Before changing case =  1265\n",
      "Unique Locations After changing case =  1256\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "location\n",
       "whitefield         514\n",
       "sarjapur  road     372\n",
       "electronic city    300\n",
       "kanakpura road     261\n",
       "thanisandra        231\n",
       "                  ... \n",
       "junnasandra          1\n",
       "k r c kothanur       1\n",
       "kadarenahalli        1\n",
       "kadubisnahalli       1\n",
       "zuzuvadi             1\n",
       "Name: location, Length: 1256, dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print('Unique Locations Before changing case = ', len(df['location'].unique()))\n",
    "df['location'] = df['location'].str.lower()\n",
    "print('Unique Locations After changing case = ', len(df['location'].unique()))\n",
    "df_location_stats = df.groupby(['location'])['location'].agg('count')\n",
    "df_location_stats.sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "6dcfe181",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:33.429229Z",
     "iopub.status.busy": "2024-06-19T19:02:33.428650Z",
     "iopub.status.idle": "2024-06-19T19:02:33.463078Z",
     "shell.execute_reply": "2024-06-19T19:02:33.462069Z"
    },
    "papermill": {
     "duration": 0.046213,
     "end_time": "2024-06-19T19:02:33.465118",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.418905",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Locations to be grouped =  1019\n",
      "Unique Locations finally = 238\n"
     ]
    }
   ],
   "source": [
    "df_locations_less_than_10 = df_location_stats[df_location_stats<=10]\n",
    "print('Locations to be grouped = ',len(df_locations_less_than_10))\n",
    "\n",
    "df['location']=df['location'].apply(lambda x: 'other' if x in df_locations_less_than_10 else x)\n",
    "print('Unique Locations finally =', len(df['location'].unique()))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d07f7ecc",
   "metadata": {
    "papermill": {
     "duration": 0.008263,
     "end_time": "2024-06-19T19:02:33.482304",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.474041",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Lets make a new column for price per sqft"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "e8ef0100",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:33.501227Z",
     "iopub.status.busy": "2024-06-19T19:02:33.500519Z",
     "iopub.status.idle": "2024-06-19T19:02:33.515735Z",
     "shell.execute_reply": "2024-06-19T19:02:33.514812Z"
    },
    "papermill": {
     "duration": 0.026869,
     "end_time": "2024-06-19T19:02:33.517765",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.490896",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>availability</th>\n",
       "      <th>location</th>\n",
       "      <th>total_sqft</th>\n",
       "      <th>bath</th>\n",
       "      <th>balcony</th>\n",
       "      <th>price</th>\n",
       "      <th>bhk</th>\n",
       "      <th>price_per_sqft</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19-Dec</td>\n",
       "      <td>electronic city phase ii</td>\n",
       "      <td>1056.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>39.07</td>\n",
       "      <td>2</td>\n",
       "      <td>3699.810606</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>chikka tirupathi</td>\n",
       "      <td>2600.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>120.00</td>\n",
       "      <td>4</td>\n",
       "      <td>4615.384615</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>uttarahalli</td>\n",
       "      <td>1440.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>62.00</td>\n",
       "      <td>3</td>\n",
       "      <td>4305.555556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>lingadheeranahalli</td>\n",
       "      <td>1521.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>95.00</td>\n",
       "      <td>3</td>\n",
       "      <td>6245.890861</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>kothanur</td>\n",
       "      <td>1200.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>51.00</td>\n",
       "      <td>2</td>\n",
       "      <td>4250.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    availability                  location  total_sqft  bath  balcony   price  \\\n",
       "0         19-Dec  electronic city phase ii      1056.0   2.0      1.0   39.07   \n",
       "1  Ready To Move          chikka tirupathi      2600.0   5.0      3.0  120.00   \n",
       "2  Ready To Move               uttarahalli      1440.0   2.0      3.0   62.00   \n",
       "3  Ready To Move        lingadheeranahalli      1521.0   3.0      1.0   95.00   \n",
       "4  Ready To Move                  kothanur      1200.0   2.0      1.0   51.00   \n",
       "\n",
       "   bhk  price_per_sqft  \n",
       "0    2     3699.810606  \n",
       "1    4     4615.384615  \n",
       "2    3     4305.555556  \n",
       "3    3     6245.890861  \n",
       "4    2     4250.000000  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['price_per_sqft']=df['price']*100000/df['total_sqft']\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b771c3b4",
   "metadata": {
    "papermill": {
     "duration": 0.008573,
     "end_time": "2024-06-19T19:02:33.535201",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.526628",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Outlier Removal\n",
    "\n",
    "We can assume that a bedroom is of 200sqft at the very least, so we should remove those entries where the room sizes are too small"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "a158cced",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-19T19:02:33.553966Z",
     "iopub.status.busy": "2024-06-19T19:02:33.553628Z",
     "iopub.status.idle": "2024-06-19T19:02:33.562885Z",
     "shell.execute_reply": "2024-06-19T19:02:33.561893Z"
    },
    "papermill": {
     "duration": 0.020816,
     "end_time": "2024-06-19T19:02:33.564738",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.543922",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total rows = (12710, 8)\n",
      "Outliers to be removed = (284, 8)\n",
      "Total rows = (12426, 8)\n"
     ]
    }
   ],
   "source": [
    "print('Total rows =',df.shape)\n",
    "print('Outliers to be removed =',df[df['total_sqft']/df['bhk']<200].shape)\n",
    "\n",
    "df = df[~(df['total_sqft']/df['bhk']<200)]\n",
    "print('Total rows =',df.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7fae0e97",
   "metadata": {
    "papermill": {
     "duration": 0.00848,
     "end_time": "2024-06-19T19:02:33.582027",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.573547",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "07fcb6e9",
   "metadata": {
    "papermill": {
     "duration": 0.008572,
     "end_time": "2024-06-19T19:02:33.599376",
     "exception": false,
     "start_time": "2024-06-19T19:02:33.590804",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 20710,
     "sourceId": 26737,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 6.26412,
   "end_time": "2024-06-19T19:02:34.126784",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-19T19:02:27.862664",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
